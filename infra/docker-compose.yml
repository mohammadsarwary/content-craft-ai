version: '3.8'

services:
  # FastAPI Backend
  fastapi:
    build:
      context: ../backend
      dockerfile: ../infra/Dockerfile
    container_name: contentcraft-fastapi
    ports:
      - "8000:8000"
    environment:
      - PROVIDER=${PROVIDER:-openai}
      - OPENAI_API_KEY=${OPENAI_API_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - OLLAMA_HOST=${OLLAMA_HOST:-http://ollama:11434}
      - MODEL_NAME=${MODEL_NAME:-gpt-4o-mini}
      - APP_SECRET=${APP_SECRET:-change-this-secret}
      - ALLOWED_ORIGINS=${ALLOWED_ORIGINS:-*}
      - REDIS_URL=redis://redis:6379
      - CACHE_TTL=${CACHE_TTL:-600}
      - LOG_LEVEL=${LOG_LEVEL:-INFO}
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - contentcraft-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Redis (Optional - for caching)
  redis:
    image: redis:7-alpine
    container_name: contentcraft-redis
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - contentcraft-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 3

  # Ollama (Optional - for local LLM)
  ollama:
    image: ollama/ollama:latest
    container_name: contentcraft-ollama
    ports:
      - "11434:11434"
    volumes:
      - ollama-data:/root/.ollama
    restart: unless-stopped
    networks:
      - contentcraft-network
    # Uncomment if you have GPU
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: 1
    #           capabilities: [gpu]

  # Nginx (Optional - reverse proxy)
  nginx:
    image: nginx:alpine
    container_name: contentcraft-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      # Uncomment for SSL
      # - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - fastapi
    restart: unless-stopped
    networks:
      - contentcraft-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  contentcraft-network:
    driver: bridge

volumes:
  redis-data:
    driver: local
  ollama-data:
    driver: local

